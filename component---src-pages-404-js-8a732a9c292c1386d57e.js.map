{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/button.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_5__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","array","arrayOf","PureButton","text","url","use_border","link","new_tab","type","custom_style","primary","secondary","styles","base","css","make_style","core_browser_esm","gatsby_browser_entry","href","target","rel","Button","_ref2","theme","primary_text_color","primary_background_color","button_PureButton","_1492660998","bool","oneOf","PureHeader","siteTitle","backgroundColor","style","marginBottom","alignItems","justifyContent","flexWrap","display","margin","padding","color","textDecoration","Header","dist_default","header_PureHeader","components_button","Wrapper","styled_base_browser_esm","Body","Footer","Layout","react_default","Fragment","overscroll_background_color","header","_2949815984","node"],"mappings":"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","file":"component---src-pages-404-js-8a732a9c292c1386d57e.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { Link } from 'gatsby';\n\n\nconst NotFoundPage = () => {\n  return(\n    <Layout>\n      <SEO title=\"404: Not found\" />\n      <div>\n        <div>\n          <h1>Hmm, looks like there's nothing here.</h1>\n        </div>\n        <div>\n          <Link to=\"/\">Go Home</Link>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby'\nimport { css } from \"@emotion/core\"\n//import './button.css';\nimport { Link } from 'gatsby';\n\nconst make_style = (primary, secondary, type, use_border) => {\n  var styles = ``\n  const base = `\n    border: ${use_border ? '1px solid' : '0'};\n    margin: 1rem;\n    text-align: center;\n    text-decoration: none;\n    min-width: 100px;\n    max-width: 300px;\n    display: inline-block;\n\n  `\n  if(type === 'fill') {\n    styles = `\n      background: linear-gradient(to right, ${primary} 50%, ${secondary} 50%);\n      transition:all 0.5s ease;\n      background-size: 205% 100%;\n      background-position:right bottom;\n      color: ${primary};\n      padding: 1rem 1.5rem;\n      &:hover {\n        background-position:left bottom;\n        transition:all 0.5s ease;\n        color: ${secondary};\n      }\n    `\n  }\n  else {\n    styles = `\n      position: relative;\n      padding: 0.5rem;\n      color: ${primary};\n      &:before {\n        content: \"\";\n        position: absolute;\n        width: 100%;\n        height: 3px;\n        bottom: 0;\n        left: 0;\n        background-color: ${primary};\n        visibility: hidden;\n        -webkit-transform: scaleX(0);\n        transform: scaleX(0);\n        -webkit-transition: all 0.3s ease-in-out 0s;\n        transition: all 0.3s ease-in-out 0s;\n      }\n      &:hover:before {\n        visibility: visible;\n        -webkit-transform: scaleX(1);\n        transform: scaleX(1);\n      }\n    `\n  }\n  return css`${base};${styles};`\n}\n\nexport const PureButton = ({text, url, use_border, link, new_tab, type, primary, secondary}) => {\n  const custom_style = make_style(primary, secondary, type, use_border)\n  if(link === true) {\n    return (     \n      <Link to={url} css={custom_style}>\n        {text}\n      </Link>\n    )\n  }\n  else if(new_tab) {\n    return (     \n      <a href={url} css={custom_style} target=\"_blank\" rel=\"noopener noreferrer\">\n        {text}\n      </a>\n    )\n  }\n  else {\n    return (     \n      <a href={url} css={custom_style}>\n        {text}\n      </a>\n    )\n  }\n}\n\nexport const Button = ({text, url, use_border, theme, link, new_tab, type}) => (\n  <StaticQuery\n    query={graphql`\n      query ButtonColorQuery {\n        site {\n          siteMetadata {\n            primary_background_color\n            primary_text_color\n          }\n        }\n      }\n    `}\n    render={data => {\n      const primary = theme === 'primary' ? data.site.siteMetadata.primary_text_color : data.site.siteMetadata.primary_background_color;\n      const secondary = theme === 'secondary' ? data.site.siteMetadata.primary_text_color : data.site.siteMetadata.primary_background_color;\n      return(\n        <PureButton\n          text={text}\n          url={url}\n          use_border={use_border}\n          link={link}\n          new_tab={new_tab}\n          type={type}\n          primary={primary}\n          secondary={secondary}\n        />\n      )\n    }}\n  />\n)\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  use_border: PropTypes.bool,\n  theme: PropTypes.oneOf(['primary', 'secondary']),\n  link: PropTypes.bool, // true if this is an internal link\n  new_tab: PropTypes.bool, // true if this is an external link that opens in a new tab\n  type: PropTypes.oneOf(['fill', 'line'])\n}\n\nButton.defaultProps = {\n  link: true,\n  theme: 'primary',\n  type: 'fill',\n  use_border: false\n}\n\nexport default Button;","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Headroom from 'react-headroom';\nimport Button from './button';\n\n\nexport const PureHeader = ({ siteTitle, backgroundColor, children }) => (\n  <div\n    style={{\n      backgroundColor: backgroundColor,\n      marginBottom: `4rem`,\n      alignItems: `flex-end`,\n      justifyContent: `space-between`,\n      flexWrap: `wrap`,\n      display: `flex`,\n    }}\n  >\n    \n    <div\n      style={{\n        margin: `0`,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <Link\n          to=\"/\"\n          style={{\n            color: `#3b383f`,\n            textDecoration: `none`,\n          }}\n      >\n        <h1 style={{ margin: 0 }}>\n            {siteTitle}\n        </h1>\n      </Link>\n    </div>\n    <div style={{\n      margin: `0`,\n      padding: `1rem`,\n      display: 'flex',\n      alignItems: 'flex-end',\n    }}>\n      {children}\n      \n    </div>\n  </div>\n)\n\nexport const Header = ({ siteTitle, backgroundColor }) => (\n  <Headroom>\n    <PureHeader siteTitle={siteTitle} backgroundColor={backgroundColor}>\n      <Button text=\"About\" url=\"/about\" use_border={false} theme=\"primary\" link={true} new_tab={false} type=\"line\" />\n    </PureHeader>\n  </Headroom>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  backgroundColor: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  backgroundColor: ``\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Header from './header'\nimport { Global, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nconst Wrapper = styled(\"div\")`\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 4rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 1;\n  min-height: 90vh;\n`\n\nconst Body = styled(\"div\")`\n  width: 100vw;\n  min-width: 350px;\n  max-width: 90vw;\n  margin-bottom: 2rem;\n`\n\nconst Footer = styled(\"footer\")`\n  width: 50vw;\n  max-width: 960px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: inherit;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            primary_background_color\n            primary_text_color\n            overscroll_background_color\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Global\n          styles={css`\n            html {\n              background-color: ${data.site.siteMetadata.overscroll_background_color};\n              color: ${data.site.siteMetadata.primary_text_color};\n            }\n            body {\n              margin: 0;\n              background-color: ${data.site.siteMetadata.primary_background_color};\n              color: ${data.site.siteMetadata.primary_text_color};\n            }\n            template {\n              display: none;\n            }\n            h1, h2, h3, h4, h5, h6 {\n              text-transform: none;\n            }\n          `}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} backgroundColor={data.site.siteMetadata.overscroll_background_color}/>\n        <Wrapper>\n          <Body>\n            {children}\n          </Body>\n          <div css={css`\n            margin-top: auto;\n            padding: 2rem;\n            width: 100vw;\n            background-color:${data.site.siteMetadata.overscroll_background_color};`\n          }>\n            <Footer>\n                Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            </Footer>\n          </div>\n        </Wrapper>\n      </>\n    )}\n  />\n)\n\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}